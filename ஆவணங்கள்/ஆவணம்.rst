Philosophie
-----------

#. Identifiants et chiffres devraient être universels (pour toutes les langues informatiques)
#. Lassi s'occupe de la translitération des variables là où nécessaire
#. Intéropérabilité entre programmes et modules dans différentes langues
#. Spécification et implémentation agnostiques de la langue informatique et de la langue humaine

Règles pour la traduction
-------------------------

#. Traduire formellement (pas de tanglais, franglais, etc.)
#. Vérifier si un projet similaire, formel ou informel, n'existerait pas déjà. Vérifier les traductions pour des langues
   similaires, et aussi des langues informatiques, et essayer de garder le même vocabulaire.

Règles pour langues lassifiables
--------------------------------

#. Supporter identifiants Unicode
#. Publier grammaire formelle
#. Publier liste de mots clefs

Astuces pour les grammaires
---------------------------
#. Mettre un `!` avant les règles à jeton multiple (sinon, la recompilation ne saura pas quel jeton utiliser)

!augassign: ("+=" | "-=" | "*=" | "@=" | "/=" | "%=" | "&=" | "|=" | "^=" | "<<=" | ">>=" | "**=" | "//=")

# Diviser les terminales qui doivent être traduites

Ne pas faire :
!keyword: "None" | "True" | "False"

Lassi ne saura différentier entre les mots-clefs lors de la traduction

Cette reformulation évite toute ambiguité :
keyword: "None"    -> const_none
     | "True"    -> const_true
     | "False"   -> const_false

Ou bien :
NONE: "None"
TRUE: "True"
FALSE: "False"
keyword: NONE | TRUE | FALSE
